{\rtf1\ansi\ansicpg1252\cocoartf1561\cocoasubrtf600
{\fonttbl\f0\fmodern\fcharset0 Courier;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;}
{\*\expandedcolortbl;;\cssrgb\c0\c0\c0;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\sl280\partightenfactor0

\f0\fs24 \cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 #include<stdio.h>\
\
int stack[20],t;\
\
void push(char);\
\
int top();\
\
void pop();\
\
int main()\
\
\{\
	\
char str[] = "((a+b)+(c+d))";\
\
	\
if (findDuplicateparenthesis(str))\
		\
printf("Duplicate Found ");\
	\
else\
		\
printf("No Duplicates Found ");\
\
\
return 0;\
\
\}\
\
\
int findDuplicateparenthesis(char str[])\
\
\{\
    \
int i=0;\
     \
while(str[i]!=NULL)\
	\
\{\
		\
if (str[i] == ')')\
		\
\{\
			\
char tp = top();\
			\
pop();\
            \
if (tp == '(')\
				\
return 1;\
            \
else\
			\
\{\
				\
while (tp != '(')\
				\
\{\
					\
tp = top();\
					\
pop();\
				\
\}\
			\
\}\
\
		\
\}\
        \
else\
		\
push(str[i]);\
		\
i++;\
	\
\}\
	\
return 0;\
\
\}\
\
void push(char value)\
\
\
\{\
	\
\
stack[++t] = value;\
\
\
\}\
\
\
int top()\
\
\
\{\
   \
 \
return stack[t];\
\
\
\}\
\
\
\
void pop()\
\
\
\{\
\
\
t--;\
\
\
\}\
}