{\rtf1\ansi\ansicpg1252\cocoartf1561\cocoasubrtf600
{\fonttbl\f0\fmodern\fcharset0 Courier;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;}
{\*\expandedcolortbl;;\cssrgb\c0\c0\c0;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\sl280\partightenfactor0

\f0\fs24 \cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 #include<stdio.h>\
 \
struct Node\
\{\
 int data;\
 struct Node* left;\
 struct Node* right;\
\};\
 struct Node* newNode(int data)\
\{\
 struct Node* node = (struct Node*)\
 malloc(sizeof(struct Node));\
 node->data = data;\
 node->left = NULL;\
 node->right = NULL;\
 return(node);\
\}\
 \
void findMinMax( struct Node *node, int *min, int *max, int hd)\
\{\
    \
    if (node == NULL) return;\
 \
    \
    if (hd < *min)  *min = hd;\
    else if (hd > *max) *max = hd;\
 \
    \
    findMinMax(node->left, min, max, hd-1);\
    findMinMax(node->right, min, max, hd+1);\
\}\
\
int printVerticalLine(struct Node *node, int line_no, int hd)\
\{\
    if (node == NULL) return 0;\
 \
    \
    if (hd == line_no)\
        return node->data+printVerticalLine(node->left, line_no, hd-1) + printVerticalLine(node->right, line_no, hd+1);\
\
    \
return (printVerticalLine(node->left, line_no, hd-1) + printVerticalLine(node->right, line_no, hd+1));\
\}\
 \
void verticalOrder(struct Node *root)\
\{\
 \
    int min = 0, max = 0,line_no;\
    findMinMax(root, &min, &max, 0);\
 \
    for (line_no = min; line_no <= max; line_no++)\
    \{\
       int x= printVerticalLine(root, line_no, 0);\
       printf("%d",x);\
        \
    \}\
\}\
 \
\
int main()\
\{\
\
   struct Node *root = newNode(1);\
    root->left = newNode(2);\
    root->right = newNode(3);\
    root->left->left = newNode(4);\
    root->left->right = newNode(5);\
    root->right->left = newNode(6);\
    root->right->right = newNode(7);\
    root->right->left->right = newNode(8);\
    root->right->right->right = newNode(9);\
 \
\
    verticalOrder(root);\
 \
    return 0;\
\}\
}