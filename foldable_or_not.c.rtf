{\rtf1\ansi\ansicpg1252\cocoartf1561\cocoasubrtf600
{\fonttbl\f0\fmodern\fcharset0 Courier;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;}
{\*\expandedcolortbl;;\cssrgb\c0\c0\c0;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\sl280\partightenfactor0

\f0\fs24 \cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 #include<stdio.h>\
\
#include<stdlib.h>\
\
int IsFoldableUtil(struct node *n1, struct node *n2);\
\
struct node\
\
\{\
\
int data;\
\
struct node* left;\
\
struct node* right;\
\
\};\
\
int IsFoldable(struct node *root)\
\
\{\
\
if (root == NULL)\
	\
\{	    \
return 1; \
\
\}\
\
\
return IsFoldableUtil(root->left, root->right);\
\
\}\
\
int IsFoldableUtil(struct node *n1, struct node *n2)\
\
\{\
\
if (n1 == NULL && n2 == NULL)\
	\
\{\
	    \
return 1;\
\
\}\
\
if (n1 == NULL || n2 == NULL)\
\
\{ \
 return 0;\
 \}\
\
return IsFoldableUtil(n1->left, n2->right) &&\
IsFoldableUtil(n1->right, n2->left);\
\
\}\
\
\
struct node* newNode(int data)\
\
\{\
\
struct node* node = (struct node*)\
malloc(sizeof(struct node));\
\
node->data = data;\
node->left = NULL;\
\
node->right = NULL;\
\
return(node);\
\
\}\
\
int main(void)\
\
\{\
\
struct node *root = newNode(5);\
\
root->left	 = newNode(8);\
\
root->right	 = newNode(12);\
\
root->right->right = newNode(12);\
\
root->right->left = newNode(5);\
\
root->right->left->right = newNode(15);\
\
root->left->left = newNode(20);\
\
root->left->right = newNode(9);\
\
root->left->right->left = newNode(10);\
\
if(IsFoldable(root) == 1)\
\
printf("\\n tree is foldable");\
 \
else\
\
printf("\\n tree is not foldable");\
\
return 0;\
\
\}\
}