{\rtf1\ansi\ansicpg1252\cocoartf1561\cocoasubrtf600
{\fonttbl\f0\fmodern\fcharset0 Courier;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;}
{\*\expandedcolortbl;;\cssrgb\c0\c0\c0;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\sl280\partightenfactor0

\f0\fs24 \cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 #include <stdio.h>\
#include <stdlib.h>\
\
//find triplet using sorting\
int compareFun(const void *a, const void *b)\
\{\
	return ( *(int*)a - *(int*)b);\
\}\
\
int findTriplet(int arr[], int size, int sum)\
\{\
	int leftIndex, rightIndex, tripletSum;\
	qsort(arr, size, sizeof(int), compareFun);\
	for(int index = 0; index < size; index++)\
	\{\
		leftIndex = index + 1;\
		rightIndex = size - 1;\
		while( leftIndex < rightIndex)\
		\{\
			tripletSum = arr[index] + arr[leftIndex] + arr[rightIndex];\
			if(tripletSum == sum)\
			\{\
				printf("Triplet is %d, %d and %d", arr[index], arr[leftIndex], arr[rightIndex]);\
				return 1;\
			\}\
			if(tripletSum < sum)\
				leftIndex++;\
			else\
				rightIndex--;\
		\}\
	\}\
	return 0;\
\}\
\
int main()\
\{\
	int *arr, size, sum;\
	printf("Enter size of the array\\n");\
	scanf("%d", &size);\
	printf("Enter elements in array\\n");\
	for(int index = 0; index < size; index++)\
		scanf("%d", &arr[index]);\
	printf("Enter the value of sum\\n");\
	scanf("%d", &sum);\
	if(!findTriplet(arr, size, sum))\
		printf("Triplet not found");\
	return 0;\
\}\
}