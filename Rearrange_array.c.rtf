{\rtf1\ansi\ansicpg1252\cocoartf1561\cocoasubrtf600
{\fonttbl\f0\fmodern\fcharset0 Courier;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;}
{\*\expandedcolortbl;;\cssrgb\c0\c0\c0;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\sl280\partightenfactor0

\f0\fs24 \cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 #include<stdio.h>\
#include<stdlib.h>\
\
/* The function to rearrange an array in-place so that arr[i]  becomes arr[arr[i]].*/\
void rearrange(int input[], int size)\
\{\
	int i;\
	/* First step: Increase all values by (arr[arr[i]]%n)*n*/\
	for (i=0; i < size; i++)\
		input[i] += (input[input[i]]%size)*size;\
\
	/* Second Step: Divide all values by n*/\
	for (i=0; i<size; i++)\
		input[i] /= size;\
\}\
\
/* A function to print an array with given size*/\
void display(int input[], int size)\
\{\
	int i;\
	for (i = 0; i < size; i++)\
		printf("%d\\t",input[i]);\
\
\}\
\
\
\
int main()\
\{\
	int size, index, *array;\
printf("Enter number of Elements in an array \\n");\
scanf("%d", &size);\
\
array = (int *) malloc(sizeof(int) * size);\
printf("Enter elements to array\\n");\
for(index = 0; index < size; index++)\
scanf("%d", &array[index]);\
printf("Before arranging the array elements are :\\n");\
display(array,size);\
rearrange(array,size);\
printf("After arranging the array elements are:\\n");\
display(array,size);\
	return 0;\
\}\
}