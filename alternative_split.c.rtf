{\rtf1\ansi\ansicpg1252\cocoartf1561\cocoasubrtf600
{\fonttbl\f0\fmodern\fcharset0 Courier;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;}
{\*\expandedcolortbl;;\cssrgb\c0\c0\c0;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\sl280\partightenfactor0

\f0\fs24 \cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 #include <stdio.h>\
#include <stdlib.h>\
\
struct  node\
\{\
	int data;\
	struct node *next;\
\};\
\
struct node *newNode(int data)\
\{\
	struct node *temp = (struct node *)malloc(sizeof(struct node));\
	temp->data = data;\
	temp->next = NULL;\
	return temp;\
\}\
\
void splitAlternateNodes(struct node *head, struct node **head1, struct node **head2)\
\{\
	*head1 = head;	\
	if(!head || !head->next)\
		return;\
	*head2 = head->next;\
	struct node *temp;	\
	while(head)\
	\{\
		temp = head->next;\
		head->next = temp ? temp->next: temp;\
		head = temp;\
	\}\
\}\
\
void printList(struct node *head)\
\{\
	for(; head; head = head->next)\
		printf("%d\\t", head->data);\
	printf("\\n");\
\}\
\
int main()\
\{\
	struct node *head = newNode(10);\
	head->next = newNode(20);\
	head->next->next = newNode(30);\
	head->next->next->next = newNode(40);\
	head->next->next->next->next = newNode(50);\
	head->next->next->next->next->next = newNode(60);\
	struct node *head1, *head2;\
	head1 = head2 = NULL;\
	splitAlternateNodes(head, &head1, &head2);\
	printList(head1);\
	printList(head2);\
	return 0;\
\}\
\
\
 \
}